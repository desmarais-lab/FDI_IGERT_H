# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(magic)
library(network)
library(igraph)
library(doBy)
library(plyr)
library(DataCombine)
#load in data
fdi <- read.csv("sub_stock.csv", stringsAsFactors=FALSE)        #FDI
fdi <- fdi[,-1]
summary(fdi$Value)
# create new variable transformations
fdi$trade_ln <- log(fdi$trade_int+fdi$trade_hco+fdi$trade_cap+fdi$trade_mix+1)
fdi$dyad <- paste(fdi$Destination, fdi$Origin, sep = "")
fdi$mass <- (log(fdi$Dest.GDP*fdi$Origin.GDP))
fdi$dist_ln <- log(fdi$dist)
fdi$Value_ln <- round(log(ifelse(fdi$Value<0, 0, fdi$Value)+1))
fdi$Dest.pop_ln <- log(fdi$Dest.pop)
fdi$Origin.pop_ln <- log(fdi$Origin.pop)
#lag DV and GDP (to create growth rates)
fdi <- slide(fdi, Var = "Dest.GDP", GroupVar = "dyad", slideBy = -1)
fdi <- slide(fdi, Var = "Origin.GDP", GroupVar = "dyad", slideBy = -1)
fdi <- slide(fdi, Var = "Value_ln", GroupVar = "dyad", slideBy = -1)
#Create GDP pc (logged) and growth rate
fdi$Origin.GDPpc_ln <- log(fdi$Origin.GDP/fdi$Origin.pop)
fdi$Dest.GDPpc_ln <- log(fdi$Dest.GDP/fdi$Dest.pop)
fdi$Dest.GDPpc <- fdi$Dest.GDP/fdi$Dest.pop
fdi$Origin.GDPg <- (fdi$Origin.GDP-fdi$`Origin.GDP-1`)/fdi$`Origin.GDP-1`
fdi$Dest.GDPg <- (fdi$Dest.GDP-fdi$`Dest.GDP-1`)/fdi$`Dest.GDP-1`
# create alliance dummy
fdi$alliance <- (fdi$nonaggression.max.x + fdi$entente.max.x + fdi$neutrality.max.x)
fdi$alliance <- as.numeric(ifelse(fdi$alliance >0, 1, 0))
#make bit  and defense numeric
fdi$bit_dummy <- as.numeric(fdi$bit_dummy)
fdi$defense.max.x <- as.numeric(fdi$defense.max.x)
#drop 2001 with missing variables
fdi <- na.omit(fdi)
sumary(fdi$Value_ln)
summary(fdi$Value_ln)
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(magic)
library(network)
library(igraph)
library(doBy)
library(plyr)
library(DataCombine)
#load in data
fdi <- read.csv("sub_stock.csv", stringsAsFactors=FALSE)        #FDI
fdi <- fdi[,-1]
# create new variable transformations
fdi$trade_ln <- log(fdi$trade_int+fdi$trade_hco+fdi$trade_cap+fdi$trade_mix+1)
fdi$dyad <- paste(fdi$Destination, fdi$Origin, sep = "")
fdi$mass <- (log(fdi$Dest.GDP*fdi$Origin.GDP))
fdi$dist_ln <- log(fdi$dist)
fdi$Value_ln <- round(log(ifelse(fdi$Value<0, 0, fdi$Value)+1))
fdi$Dest.pop_ln <- log(fdi$Dest.pop)
fdi$Origin.pop_ln <- log(fdi$Origin.pop)
#lag DV and GDP (to create growth rates)
fdi <- slide(fdi, Var = "Dest.GDP", GroupVar = "dyad", slideBy = -1)
fdi <- slide(fdi, Var = "Origin.GDP", GroupVar = "dyad", slideBy = -1)
fdi <- slide(fdi, Var = "Value_ln", GroupVar = "dyad", slideBy = -1)
#Create GDP pc (logged) and growth rate
fdi$Origin.GDPpc_ln <- log(fdi$Origin.GDP/fdi$Origin.pop)
fdi$Dest.GDPpc_ln <- log(fdi$Dest.GDP/fdi$Dest.pop)
fdi$Dest.GDPpc <- fdi$Dest.GDP/fdi$Dest.pop
fdi$Origin.GDPg <- (fdi$Origin.GDP-fdi$`Origin.GDP-1`)/fdi$`Origin.GDP-1`
fdi$Dest.GDPg <- (fdi$Dest.GDP-fdi$`Dest.GDP-1`)/fdi$`Dest.GDP-1`
# create alliance dummy
fdi$alliance <- (fdi$nonaggression.max.x + fdi$entente.max.x + fdi$neutrality.max.x)
fdi$alliance <- as.numeric(ifelse(fdi$alliance >0, 1, 0))
#make bit  and defense numeric
fdi$bit_dummy <- as.numeric(fdi$bit_dummy)
fdi$defense.max.x <- as.numeric(fdi$defense.max.x)
summary(fdi$Value_ln)
View(fdi)
#=============================================================#
# John Schoeneman
# Work Done For: FDI Network Analysis RA-IGERT
# Date: Spring 2017
# Work Done: Rope Ladder Plots for Years
# Machine: MacPro OSX Yosemite
#=============================================================#
# model fit objects on in Box Folder "fdi_models"; 'wo' signifies no network terms
# clear workspace and set seed
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(doBy)
library(network)
#load in data
fdi <- read.csv("sub_stock.csv", stringsAsFactors=FALSE)        #FDI
fdi <- fdi[,-1]
m_name <- paste("models_tweight/model2_","02", "_w.rda", sep="")
load(m_name)
# dataframe to store values
a <- data.frame(1:26)
wo <- data.frame(1:24)
#loop through each year
for(i in 2002:2012){
#create net object for models
fdi02 <- subset(fdi, fdi$Year ==i)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
#scale continuous variables
vars <- c(18:34,36, 38:39, 41:44)
for(j in vars){
fdi02[,j] <- range01(fdi02[,j])
}
#create vertex dataset
vertex_attr <- summaryBy(Origin.GDP+Origin.polity+Origin.TO+Origin.pop+Origin.GDPg+
Origin.GDPpc+Origin.pv ~ Origin, data=fdi02)
#rename vertex dataset
names(vertex_attr) <- c("name","GDP", "Polity", "TradeOpen", "Pop", "GDP.g","GDPpc", "PV")
fdi_net <- network(fdi02, matrix.type="edgelist", directed=TRUE)
#set edge attributes
set.edge.attribute(fdi_net, attrname="Value_ln", value=fdi02$Value_ln)
set.edge.attribute(fdi_net, attrname="distance", value=fdi02$dist)
set.edge.attribute(fdi_net, attrname="contig", value=fdi02$contig)
set.edge.attribute(fdi_net, attrname="colony", value=fdi02$colony)
set.edge.attribute(fdi_net, attrname="lang_ethno", value=fdi02$comlang_ethno)
set.edge.attribute(fdi_net, attrname="defence_t", value=fdi02$defense.max.x)
set.edge.attribute(fdi_net, attrname="nonagg_t", value=fdi02$nonaggression.max.x)
set.edge.attribute(fdi_net, attrname="neut_t", value=fdi02$neutrality.max.x)
set.edge.attribute(fdi_net, attrname="entente_t", value=fdi02$entente.max.x)
set.edge.attribute(fdi_net, attrname="depth", value=fdi02$depth_latent)
set.edge.attribute(fdi_net, attrname="trade_int", value=fdi02$trade_int)
set.edge.attribute(fdi_net, attrname="mass", value=fdi02$mass)
set.edge.attribute(fdi_net, attrname="lag_stock", value=fdi02$Value_ln.1)
#set vertex attributes
set.vertex.attribute(fdi_net, attrname="GDP", value=vertex_attr$GDP)
set.vertex.attribute(fdi_net, attrname="Polity", value=vertex_attr$Polity)
set.vertex.attribute(fdi_net, attrname="TradeOpen", value=vertex_attr$TradeOpen)
set.vertex.attribute(fdi_net, attrname="GDPpc", value=vertex_attr$GDPpc)
set.vertex.attribute(fdi_net, attrname="GDP.g", value=vertex_attr$GDP.g)
set.vertex.attribute(fdi_net, attrname="PV", value=vertex_attr$PV)
#load model
m_yr <- i-2000
m_yr <- ifelse(m_yr<10, paste("0", m_yr, sep=""), paste(m_yr, sep=""))
m_name <- paste("models_tweight/model2_",m_yr, "_w.rda", sep="")
load(m_name)
m1_name <- paste("models_tweight/model_",m_yr, "_wo.rda", sep="")
load(m1_name)
#loop through coefficients to sign to dataframe
a <- cbind(a, coef(fit.01.2))
a <- cbind(a, confint(fit.01.2)[,1])
a <- cbind(a, confint(fit.01.2)[,2])
wo <- cbind(wo, coef(fit.01.1))
wo <- cbind(wo, confint(fit.01.1)[,1])
wo <- cbind(wo, confint(fit.01.1)[,2])
}
