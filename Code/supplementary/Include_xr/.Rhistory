# clear workspace, setting random seed, and setting work directory
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
fdi <- read.csv("../../main/subset_stock.csv", stringsAsFactors=FALSE)        #FDI
View(fdi)
fdi <- read.csv("../../main/subset_stock.csv", stringsAsFactors=FALSE)[,-1]        #FDI
View(fdi)
# clear workspace, set seed, set wd
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(Amelia)
library(DataCombine)
#load in data
fdi <- read.csv("../../main/subset_stock.csv", stringsAsFactors=FALSE)[,-1]        #FDI
install.packages("Amelia")
View(fdi)
missmap(fdi)
library(Amelia)
missmap(fdi)
df1 <- fdi[,c(1:19)]
View(df1)
#set id variables for ameilia
ids <-  c("Origin","Destination")
#run imputations
amelia_fit <- amelia(df1, m =10, idvars =ids,
ts = "Year", cs = c("dyadid"), polytime = 1)
fdi_a <- amelia_fit[[1]]
fdi_a <- amelia_fit$imputations[[1]]
df_z <- fdi[,c(1:19)]
df_a <- amelia_fit$imputations[[1]]
df_z$Value <- ifelse(is.na(df_z$Value),0,df_z$Value)
df_z$Group <- "zero-imputed"
df_a$Group <- "Amelia-imputed"
View(df_a)
df <- rbind(df_z[,c(5,20)],df_a[,c(5,20)])
View(df)
name <- ggplot(df ,aes(x=(Value), fill=Source)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave(paste("compare_imputed.pdf",sep=""), name, device="pdf", width=6, height=4)
library(ggplot2)
name <- ggplot(df ,aes(x=(Value), fill=Source)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave(paste("compare_imputed.pdf",sep=""), name, device="pdf", width=6, height=4)
name <- ggplot(df ,aes(x=(Value), fill=Source)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))#+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#ylab("Density")+ xlab("FDI Value, USD")+
ggsave(paste("compare_imputed.pdf",sep=""), name, device="pdf", width=6, height=4)
name <- ggplot(df ,aes(x=(Value), fill=Source)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
name <- ggplot(df ,aes(x=(Value)))+#, fill=Source)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
name <- ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
name <- ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")+
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")
name <- ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
df$Value <- ifelse(df$Value<0,0,df$Value)
name <- ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
df_a <- amelia_fit$imputations[[1]]
for(i in 2:10){
df_a$Value <- df_a$Value+amelia_fit$imputations[[1]]$Value
}
df_a$Value <- df_a$Value/10
df_a <- amelia_fit$imputations[[1]]
View(df_a)
df_a <- amelia_fit$imputations[[1]]
for(i in 2:10){
df_a$Value <- df_a$Value+amelia_fit$imputations[[i]]$Value
}
df_a$Value <- df_a$Value/10
df_z <- df1
df_z$Value <- ifelse(is.na(df_z$Value),0,df_z$Value)
df_a <- amelia_fit$imputations[[1]]
for(i in 2:10){
df_a$Value <- df_a$Value+amelia_fit$imputations[[i]]$Value
}
df_a$Value <- df_a$Value/10
df_z$Group <- "zero-imputed"
df_a$Group <- "Amelia-imputed"
df <- rbind(df_z[,c(5,20)],df_a[,c(5,20)])
df$Value <- ifelse(df$Value<0,0,df$Value)
df$Value <- ceiling(log(df$Value)*2)
View(df)
############# Amelia vs Zero ################
df_z <- df1
df_z$Value <- ifelse(is.na(df_z$Value),0,df_z$Value)
df_a <- amelia_fit$imputations[[1]]
for(i in 2:10){
df_a$Value <- df_a$Value+amelia_fit$imputations[[i]]$Value
}
df_a$Value <- df_a$Value/10
df_z$Group <- "zero-imputed"
df_a$Group <- "Amelia-imputed"
df <- rbind(df_z[,c(5,20)],df_a[,c(5,20)])
df$Value <- ifelse(df$Value<0,0,df$Value)
df$Value <- ceiling(log(df$Value+1)*2)
name <- ggplot(df ,aes(x=(Value), fill=Group)) +
geom_density(alpha=0.25)+
scale_fill_manual(values=c("red","blue"),name = "Group")+
ggtitle(paste0("Zero-imputed Values vs. Amelia-imputations"))+
#geom_vline(xintercept=max(d$donation.sum)/1000, colour="red") +
#geom_vline(xintercept=max(r$donation.sum)/1000, colour="blue") +
#geom_text(aes(x=max(d$donation.sum)/1000, label="Max Contribution Total, BE", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
#geom_text(aes(x=max(r$donation.sum)/1000, label="Max Contribution Total, Random", y=0.05),
#          colour="black", angle=90, vjust = 1.2, family="URWTimes")+
ylab("Density")+ xlab("FDI Value, USD")
ggsave("compare_imputed.pdf", name, device="pdf", width=6, height=4)
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Read in data
load("tax_cov.Rdata")
load("tax_net.Rdata")
net <- netlist[[1]]
edge_vals <- net %e% "Value"
net %e% "tValue" <- ceiling(log(edge_vals)*2)
edge_vals2 <- net %e% "tValue"
library(sna)
library(network)
edge_vals <- net %e% "Value"
net %e% "tValue" <- ceiling(log(edge_vals)*2)
edge_vals2 <- net %e% "tValue"
# clear workspace, set seed, set wd
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(Amelia)
library(ggplot2)
#load in data
fdi <- read.csv("../../main/subset_stock.csv", stringsAsFactors=FALSE)[,-1]        #FDI
View(fdi)
n_NAs <- nrow(subset(fdi,is.na(fdi$Value)))
n_zeros <- nrow(subset(fdi,fdi$Value==0))
n <- nrow(fdi)
n_NAs/n
n_zeroes/(n-n_NAs)
n_zeros/(n-n_NAs)
# clear workspace, setting random seed, and setting work directory
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
library(amen)
#load ERGM results for with
load("LSM_nrm_results.RData")
(n_zeros+n_NAs)/(n)
# clear workspace, set seed, set wd
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(Amelia)
library(ggplot2)
#load in data
fdi <- read.csv("../../main/subset_stock.csv", stringsAsFactors=FALSE)[,-1]        #FDI
#   check missingness
n <- nrow(fdi)
n_NAs <- nrow(subset(fdi,is.na(fdi$Value)))
n_zeros <- nrow(subset(fdi,fdi$Value==0))
#NAs as percentage
n_NAs/n
#zeros as percantage of non-NAs
n_zeros/(n-n_NAs)
#zeros + imputed zeroes as percantage of all data
(n_zeros+n_NAs)/(n)
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(network)
#load in data
### Read in data
load("../../main/main_net.Rdata")
load("../../main/main_cov.Rdata")
########## Add tax rates ##############
# add country codes for merging
codes <- read.csv("WB_country_codes.csv", stringsAsFactors=FALSE)
codes <- unique(c(codes$Origin.Code, codes$Origin))
codes <- as.data.frame(codes[1:173], codes[174:346])
colnames(codes)[1] <- "code"
codes$name <- rownames(codes)
taxWB <- read.csv("WDI_xr_inflation.csv", stringsAsFactors=FALSE)
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(network)
#load in data
### Read in data
load("../../main/main_net.Rdata")
load("../../main/main_cov.Rdata")
########## Add tax rates ##############
# add country codes for merging
codes <- read.csv("WB_country_codes.csv", stringsAsFactors=FALSE)
codes <- unique(c(codes$Origin.Code, codes$Origin))
codes <- as.data.frame(codes[1:173], codes[174:346])
colnames(codes)[1] <- "code"
codes$name <- rownames(codes)
# Corporate Tax rates
WDI <- read.csv("WDI_xr_inflation.csv", stringsAsFactors=FALSE)
View(WDI)
# clean off variables
WDI <- WDI[,-2:-3]
colnames(WDI)[3:4] <- c("inflation", "xr")
WDI <- na.omit(WDI)
WDI$Time <- as.numeric(WDI$Time)
WDI <- merge(WDI, codes, by.x = "Country.Code", by.y = "code")
rm(codes)
View(WDI)
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(network)
#load in data
### Read in data
load("../../main/main_net.Rdata")
load("../../main/main_cov.Rdata")
########## Add tax rates ##############
# add country codes for merging
codes <- read.csv("WB_country_codes.csv", stringsAsFactors=FALSE)
codes <- unique(c(codes$Origin.Code, codes$Origin))
codes <- as.data.frame(codes[1:173], codes[174:346])
colnames(codes)[1] <- "code"
codes$name <- rownames(codes)
# Corporate Tax rates
WDI <- read.csv("WDI_xr_inflation.csv", stringsAsFactors=FALSE)
# clean off variables
WDI <- WDI[,-2:-3]
colnames(WDI)[3:4] <- c("inflation", "xr")
WDI[,c(1,3,4)] <- as.numeric(WDI[,c(1,3,4)])
WDI[,1] <- as.numeric(WDI[,1])
WDI[,3] <- as.numeric(WDI[,3])
WDI[,4] <- as.numeric(WDI[,4])
WDI <- na.omit(WDI)
WDI <- merge(WDI, codes, by.x = "Country.Code", by.y = "code")
rm(codes)
yrs <- 2002:2012
for(y in 1:11){
#identify countries that have data
df_xr<- subset(WDI, WDI$Time==yrs[y])[,3:5]
nodes <- subset(unique(df_xr$name),
unique(df_xr$name) %in% network.vertex.names(netlist[[y]]))
df_xr <- subset(df_xr, df_xr$name %in% nodes)
#update drop nodes in covlist with missing data
for(v in 1:9){
covlist[[y]][[v]] <- subset(covlist[[y]][[v]], rownames(covlist[[y]][[v]]) %in% nodes)
covlist[[y]][[v]] <- covlist[[y]][[v]][,(colnames(covlist[[y]][[v]]) %in% nodes)]
}
#drop nodes in networks with missing data
netlist[[y]] <- netlist[[y]] %s% which(netlist[[y]] %v% "vertex.names" %in% nodes)
#add node level data
row.names(df_xr) <- df_xr$name
df_xr <- df_xr[c(network.vertex.names(netlist[[y]])),]
netlist[[y]] %v% "inflation" <- df_xr$inflation
netlist[[y]] %v% "xr" <- df_tax$xr
}
# clear workspace
rm(list=ls())
set.seed(19)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#load packages
library(network)
#load in data
### Read in data
load("../../main/main_net.Rdata")
load("../../main/main_cov.Rdata")
########## Add tax rates ##############
# add country codes for merging
codes <- read.csv("WB_country_codes.csv", stringsAsFactors=FALSE)
codes <- unique(c(codes$Origin.Code, codes$Origin))
codes <- as.data.frame(codes[1:173], codes[174:346])
colnames(codes)[1] <- "code"
codes$name <- rownames(codes)
# Corporate Tax rates
WDI <- read.csv("WDI_xr_inflation.csv", stringsAsFactors=FALSE)
# clean off variables
WDI <- WDI[,-2:-3]
colnames(WDI)[3:4] <- c("inflation", "xr")
#merge to panel and drop missing obs.
WDI[,1] <- as.numeric(WDI[,1])
WDI[,3] <- as.numeric(WDI[,3])
WDI[,4] <- as.numeric(WDI[,4])
WDI <- na.omit(WDI)
WDI <- merge(WDI, codes, by.x = "Country.Code", by.y = "code")
rm(codes)
yrs <- 2002:2012
#update data
for(y in 1:11){
#identify countries that have data
df_xr<- subset(WDI, WDI$Time==yrs[y])[,3:5]
nodes <- subset(unique(df_xr$name),
unique(df_xr$name) %in% network.vertex.names(netlist[[y]]))
df_xr <- subset(df_xr, df_xr$name %in% nodes)
#update drop nodes in covlist with missing data
for(v in 1:9){
covlist[[y]][[v]] <- subset(covlist[[y]][[v]], rownames(covlist[[y]][[v]]) %in% nodes)
covlist[[y]][[v]] <- covlist[[y]][[v]][,(colnames(covlist[[y]][[v]]) %in% nodes)]
}
#drop nodes in networks with missing data
netlist[[y]] <- netlist[[y]] %s% which(netlist[[y]] %v% "vertex.names" %in% nodes)
#add node level data
row.names(df_xr) <- df_xr$name
df_xr <- df_xr[c(network.vertex.names(netlist[[y]])),]
netlist[[y]] %v% "inflation" <- df_xr$inflation
netlist[[y]] %v% "xr" <- df_xr$xr
}
#save files
save(covlist, file = "xr_cov.Rdata")
save(netlist, file = "xr_net.Rdata")
