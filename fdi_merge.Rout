
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #=============================================================#
> # John Schoeneman
> # Work Done For: FDI Network Analysis RA-IGERT
> # Date: FAll 2016
> # Work Done: Merge Other Variables
> # Machine: MacPro OSX Yosemite
> #=============================================================#
> 
> 
> 
> # clear workspace
> rm(list=ls())
> 
> 
> 
> setwd("/Users/johnpschoeneman/Documents/school/Penn State/RA:TA/FDI_IGERT_H/Code")
> 
> #load in data
> fdi <- read.csv("fdi_clean.csv", stringsAsFactors=FALSE)        #FDI
> #destination has 201 countries, #Origin has 161
> 
> #create full panel
> library(gtools)
> id1 <- unique(fdi$Dest.Code)
> years <- seq(2001, 2012)
> panel <- data.frame(permutations(n=201,r=2,v=c(id1),repeats.allowed=F)) # 40200
> panel$dyadid <- seq(1:40200)
> panel <- do.call("rbind", replicate(12, panel, simplify = FALSE)) # 482400
> yearid <- data.frame()
> for(i in years){
+   year <- data.frame(rep(i, 40200))
+   yearid <- rbind(yearid,year)
+ }
> panel$Year <- yearid[,1]
> names(panel) <- c("Dest.Code", "Origin.Code", "dyadid", "Year")
> rm(i, id1, years, yearid, year)
> 
> #merge fdi data to panel
> dest_name <- data.frame(unique(fdi$Dest.Code), unique(fdi$Destination))
> panel <- merge(panel, dest_name, by.x =c("Dest.Code"), by.y = c("unique.fdi.Dest.Code."))
> origin_name <- data.frame(unique(fdi$Dest.Code), unique(fdi$Destination))
> panel <- merge(panel, origin_name, by.x =c("Origin.Code"), by.y = c("unique.fdi.Dest.Code."))
> names(panel) <- c("Dest.Code", "Origin.Code", "dyadid", "Year", "Destination", "Origin")
> fdi_value <- fdi[3:7]
> fdi_value <- fdi_value[,-2]
> panel <- merge(panel, fdi_value, by =c("Dest.Code", "Origin.Code", "Year"), all.x =TRUE)
> rm(dest_name, origin_name, fdi_value)
> 
> 
> # control variable datasets
> distance <- read.csv("dist.csv", stringsAsFactors=FALSE)        #Distance, etc.
> GDP <- read.csv("WB_GDP.csv", stringsAsFactors=FALSE)           #GDP
> violence <- read.csv("pv_total.csv", stringsAsFactors=FALSE)    #Political Violence
> WB <- read.csv("WB_var.csv", stringsAsFactors=FALSE)            #Trade opennes, Pop., growth
> polity <- read.csv("PolityIV.csv", stringsAsFactors=FALSE)      #Polity Score
> alliance <- read.csv("alliance.csv", stringsAsFactors=FALSE)    #Security Alliances
> transparency <- read.csv("cpi.csv", stringsAsFactors=FALSE)     #Transparency Score
> PTA_s <- read.csv("PTA_sign.csv", stringsAsFactors=FALSE)       #PTA signed
> PTA_w <- read.csv("PTA_withdrawal.csv", stringsAsFactors=FALSE) #PTA withdrew
> 
> # add distance data
> fdi <- merge(fdi, distance, by.x =c("Dest.Code", "Origin.Code"), by.y = c("iso_d", "iso_o"))
> fdi <- fdi[order(fdi$Destination, fdi$Year),]
> 
> # GDP data
> fdi <- merge(fdi, GDP, by.x = c("Dest.Code", "Year"), by.y = c("Country.Code", "Year"))
> colnames(fdi)[20] <- "Dest.GDP"
> fdi <- merge(fdi, GDP, by.x = c("Origin.Code", "Year"), by.y = c("Country.Code", "Year"))
> colnames(fdi)[21] <- "Origin.GDP"
> 
> 
> # Alliances
> 
> # Transparency
> 
> # PolityIV
> 
> # WB: Population, trade openness, and growth rate
> 
> # Political Violence
> 
> # PTA network
> 
> # Supply Chains
> 
> # Diaspora Network
> 
> # Resource Endowment
> 
> # Transparency
> 
> #write csv
> write.csv(fdi, file = "fdi_edge.csv")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  9.959   0.437  10.531 
